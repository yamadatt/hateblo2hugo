// Automatically generated by MockGen. DO NOT EDIT!
// Source: service/movabletype.go

package service

import (
	movabletype "github.com/yamadatt/movabletype"
	gomock "github.com/golang/mock/gomock"
)

// MockMovableType is a mock of MovableType interface
type MockMovableType struct {
	ctrl     *gomock.Controller
	recorder *MockMovableTypeMockRecorder
}

// MockMovableTypeMockRecorder is the mock recorder for MockMovableType
type MockMovableTypeMockRecorder struct {
	mock *MockMovableType
}

// NewMockMovableType creates a new mock instance
func NewMockMovableType(ctrl *gomock.Controller) *MockMovableType {
	mock := &MockMovableType{ctrl: ctrl}
	mock.recorder = &MockMovableTypeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockMovableType) EXPECT() *MockMovableTypeMockRecorder {
	return _m.recorder
}

// Parse mocks base method
func (_m *MockMovableType) Parse(path string) ([]*movabletype.Entry, error) {
	ret := _m.ctrl.Call(_m, "Parse", path)
	ret0, _ := ret[0].([]*movabletype.Entry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Parse indicates an expected call of Parse
func (_mr *MockMovableTypeMockRecorder) Parse(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Parse", arg0)
}
